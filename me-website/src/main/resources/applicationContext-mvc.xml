<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<!-- 扫描所有的controller 但是不扫描service -->
	<context:component-scan  base-package="cn.kang.biu.controller"  use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 扫描文件（自动注入）,包括DAO层注入Service层，Service层注入Controller层 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">  
                      <list>  
                            <value>application/json;charset=UTF-8</value>  
                      </list>  
                  </property>
			</bean>
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="prettyPrint" value="true" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 对模型视图添加前后缀 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/pages/" p:suffix=".jsp" />


	<!-- 将Controller抛出的异常转到特定View, 保持SiteMesh的装饰效果 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">error/noperms</prop>
				<prop key="org.apache.shiro.authz.AuthorizationException">error/noperms</prop>
				<prop key="java.lang.Throwable">error/500</prop>
			</props>
		</property>
	</bean>

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="maxUploadSize" value="-1" />
		<property name="maxInMemorySize" value="10240"/>
	</bean>


	<!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL -->
	<mvc:default-servlet-handler />
	<!-- 对静态资源文件的访问 -->
	
	<mvc:resources mapping="/general/**" location="/general/" />
	<mvc:resources mapping="/include/**" location="/include/" />
	<mvc:resources mapping="/pages/**"  location="/WEB-INF/pages/" />
	<mvc:resources mapping="/resource/**"  location="/WEB-INF/classes/res/" />
	
 <!-- 	<mvc:interceptors>
		<bean class="platform.website.common.interceptor.BaseInterceptor" />
	</mvc:interceptors>  -->
	<!-- <mvc:interceptors>
		国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
	</mvc:interceptors> -->
	
	<!-- <bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		国际化信息所在的文件名
		<property name="basenames">
			<value>res.messages</value>
		</property>
		如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean> -->
	

	<!-- 基于session -->
	<!--  <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" /> -->
 
    <!-- 基于cookies -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
    	<property name="defaultLocale" value="en_US"></property>
    </bean>
</beans>